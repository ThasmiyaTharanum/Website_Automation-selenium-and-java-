<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-04T20:37:58 IST" name="Suite" finished-at="2024-08-04T20:38:20 IST" duration-ms="22699">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidation()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" name="LoginErrorValidation" class="miniproject.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.SubmitOrder(java.util.HashMap)[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" name="SubmitOrder" class="miniproject.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-08-04T20:37:58 IST" name="Error Validations Test" finished-at="2024-08-04T20:38:19 IST" duration-ms="21620">
      <class name="miniproject.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:37:58 IST" name="launchApplication" finished-at="2024-08-04T20:38:02 IST" duration-ms="4726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:02 IST" name="LoginErrorValidation" finished-at="2024-08-04T20:38:03 IST" duration-ms="846" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at miniproject.Tests.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:03 IST" name="tearDown" finished-at="2024-08-04T20:38:04 IST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:04 IST" name="launchApplication" finished-at="2024-08-04T20:38:10 IST" duration-ms="5661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:10 IST" name="LoginErrorValidation" finished-at="2024-08-04T20:38:11 IST" duration-ms="893" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at miniproject.Tests.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:249)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:12 IST" name="tearDown" finished-at="2024-08-04T20:38:13 IST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:13 IST" name="launchApplication" finished-at="2024-08-04T20:38:16 IST" duration-ms="3576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:16 IST" name="ProductErrorValidation" finished-at="2024-08-04T20:38:19 IST" duration-ms="2828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:miniproject.Tests.ErrorValidationsTest@79defdc]" started-at="2024-08-04T20:38:19 IST" name="tearDown" finished-at="2024-08-04T20:38:19 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- miniproject.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2024-08-04T20:37:58 IST" name="Submit Order Test" finished-at="2024-08-04T20:38:20 IST" duration-ms="22699">
      <class name="miniproject.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:37:58 IST" name="launchApplication" finished-at="2024-08-04T20:38:04 IST" duration-ms="5499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:04 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-08-04T20:38:08 IST" duration-ms="3956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ZARA COAT 3, email=anshika@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:08 IST" name="tearDown" finished-at="2024-08-04T20:38:08 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:08 IST" name="launchApplication" finished-at="2024-08-04T20:38:10 IST" duration-ms="2047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:10 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-08-04T20:38:15 IST" duration-ms="5042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ADIDAS ORIGINAL, email=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:15 IST" name="tearDown" finished-at="2024-08-04T20:38:15 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:15 IST" name="launchApplication" finished-at="2024-08-04T20:38:19 IST" duration-ms="3636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:19 IST" name="OrderHistoryTest" finished-at="2024-08-04T20:38:20 IST" depends-on-methods="miniproject.Tests.SubmitOrderTest.SubmitOrder" duration-ms="1161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:miniproject.Tests.SubmitOrderTest@1807f5a7]" started-at="2024-08-04T20:38:20 IST" name="tearDown" finished-at="2024-08-04T20:38:20 IST" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- miniproject.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
